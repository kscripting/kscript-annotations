//file:noinspection DifferentKotlinGradleVersion
buildscript {
    ext.kotlinVersion = '1.7.10'

    repositories {
        mavenCentral()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }
}


plugins {
    id "java-library"
    id "maven-publish"
    id "signing"
    id "io.github.gradle-nexus.publish-plugin" version "1.1.0"
}

apply plugin: 'kotlin'


repositories {
    mavenCentral()
}

java {
    withJavadocJar()
    withSourcesJar()
}


group = 'io.github.kscripting'
version = '1.5'


publishing {
    publications {
        mavenJava(MavenPublication) {
            from(components.java)

            pom {
                name = "kscript-annotations"
                description = 'Annotation directives for kscript'
                url = 'https://github.com/kscripting/kscript'

                licenses {
                    license {
                        name = 'MIT'
                        url = 'https://github.com/kscripting/kscript-annotations/blob/master/LICENSE.txt'
                    }
                }


                scm {
                    connection = 'scm:git:github.com/kscripting/kscript-annotations.git'
                    url = 'https://github.com/kscripting/kscript-annotations.git'
                }


                developers {
                    developer {
                        id = 'holgerbrandl'
                        name = 'Holger Brandl'
                        email = 'holgerbrandl@gmail.com'
                    }

                    developer {
                        id.set("aartiPl")
                        name.set("Marcin Kuszczak")
                        email.set("aarti@interia.pl")
                    }
                }
            }
        }
    }
}


nexusPublishing {
    repositories {
        sonatype {
            nexusUrl = uri("https://oss.sonatype.org/service/local/staging/deploy/maven2/")
            snapshotRepositoryUrl = uri("https://oss.sonatype.org/content/repositories/snapshots/")
            username = project.findProperty("sonatype.user") ?: System.getenv("SONATYPE_USER")
            password = project.findProperty("sonatype.password") ?: System.getenv("SONATYPE_PASSWORD")
        }
    }
}

signing {
    sign publishing.publications.mavenJava
}
